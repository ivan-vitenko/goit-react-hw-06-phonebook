{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","connect","state","contacts","dispatch","contactsActions","useState","setName","setNumber","handleChange","e","target","value","onSubmit","preventDefault","isDublicate","map","item","toLowerCase","alert","isDuplicate","type","placeholder","onChange","filter","className","s","Filter","includes","onClick","App","parseContacts","JSON","parse","localStorage","getItem","initialContacts","createReducer","actions","action","contact","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.fda61ca4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__13gOn\"};","import types from './contacts-types';\nimport { v4 as uuid } from 'uuid';\n\nimport { createAction } from '@reduxjs/toolkit';\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n\n//   payload: {\n//     id: uuid(),\n//     name: name,\n//     number: number,\n//   },\n// });\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: uuid(),\n    name: name,\n    number: number,\n  },\n}));\n\n// const deleteContact = id => ({\n//   type: types.DELETE,\n//   payload: id,\n// });\n\nconst deleteContact = createAction('contacts/delete');\n\n// const changeFilter = value => ({\n//   type: types.CHANGE_FLTER,\n//   payload: value,\n// });\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ contacts, addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const inputName = e.target.name;\n\n    switch (inputName) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isDuplicate = () => {\n    let isDublicate = false;\n\n    contacts.map(item => {\n      if (item.name.toLowerCase() === name.toLowerCase()) {\n        alert(`${item.name} is already in contacts.`);\n        isDublicate = true;\n      }\n    });\n\n    return isDublicate;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && number && !isDuplicate()) {\n      addContact(name, number);\n      resetState();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label>\n        Phone number\n        <input\n          name=\"number\"\n          type=\"number\"\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contact by name\n    <input\n      className={s.Filter}\n      name=\"filter\"\n      type=\"text\"\n      placeholder=\"Enter to find\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filter, deleteContact }) => (\n  <ul>\n    {contacts.map(\n      item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()) && (\n          <li key={item.id}>\n            {item.name}: {item.number}{' '}\n            <button id={item.id} type=\"button\" onClick={deleteContact}>\n              Delete\n            </button>\n          </li>\n        ),\n    )}\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.contacts,\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: e => dispatch(contactsActions.deleteContact(e.target.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h2>Phonebook</h2>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      {/* {Boolean(contacts.length) && ( */}\n      <div className=\"contacts\">\n        <Filter />\n        <ContactList />\n      </div>\n      {/* )} */}\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport types from './contacts-types';\nimport actions from './contacts-actions';\nimport store from '../store';\n\nconst parseContacts = JSON.parse(localStorage.getItem('contacts'));\nconst initialContacts = parseContacts ? parseContacts : [];\n\n// const contacts = (state = initialContacts, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       const newContacts = [...state, payload];\n//       localStorage.setItem('contacts', JSON.stringify(newContacts));\n//       return newContacts;\n\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst contacts = createReducer(initialContacts, {\n  [actions.addContact]: (state, action) => {\n    const newContacts = [...state, action.payload];\n    // localStorage.setItem('contacts', JSON.stringify(newContacts));\n\n    return newContacts;\n  },\n\n  [actions.deleteContact]: (state, action) => {\n    const filteredContacts = state.filter(\n      contact => contact.id !== action.payload,\n    );\n\n    // localStorage.setItem('contacts', JSON.stringify(filteredContacts));\n\n    return filteredContacts;\n  },\n});\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FLTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload, // _ — так позначається параметр, який не використовується\n});\n\nexport default combineReducers({ contacts, filter });\n","import {\n  createStore,\n  // combineReducers\n} from 'redux';\n\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n\n  middleware, //middleware: middleware\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}